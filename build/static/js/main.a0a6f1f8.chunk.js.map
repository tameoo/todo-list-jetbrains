{"version":3,"sources":["components/app-header/index.js","components/app-header/app-header.js","components/tabs/index.js","components/tabs/tabs.js","components/todo-item/index.js","components/todo-item/todo-item.js","components/todo-list/index.js","components/todo-list/todo-list.js","components/form/index.js","components/form/form.js","components/bar-chart/bar-chart.js","components/bar-chart/index.js","service/index.js","components/app/index.js","components/app/app.js","index.js"],"names":["Header","active","done","className","Tabs","OnFilterTodo","OnToggleBarChart","useState","all","setTabs","clazz","onClick","TodoItem","important","todo","OnDoneTodo","OnImportantTodo","OnDeleteTodo","id","label","TodoList","todos","text","length","map","todosItemsBuild","Form","OnSubmitTodo","autoComplete","onSubmit","e","target","value","name","type","placeholder","BarChartItem","graphs","el","i","height","data-height","style","BarChart","hideBarChart","charts","completed_date","week","counter","j","push","getTodo","a","fetch","response","json","result","Error","postTodo","newTodo","method","headers","body","JSON","stringify","updateTodo","putTodo","deleteTodo","App","setTodos","checking","setCheck","setBarChart","useEffect","data","fetchData","todoFindIndex","findIndex","modifyTodo","filter","tab","preventDefault","Date","now","created_date","getDay","reset","index","withDone","slice","withImportant","ReactDOM","render","document","getElementById"],"mappings":"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","file":"static/js/main.a0a6f1f8.chunk.js","sourcesContent":["import Header from './app-header';\r\nexport default Header;","import React from 'react';\r\nimport './app-header.css';\r\n\r\nconst Header = ({active, done}) => {\r\n    return (\r\n        <div className=\"header\">\r\n            <div className=\"header-logo\">\r\n            To-do List\r\n            </div>\r\n            <div className=\"header-counter\">\r\n                {active} active, {done} done.\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nexport default Header;","import Tabs from './tabs';\r\nexport default Tabs;","import React, { useState } from 'react';\r\nimport './tabs.css';\r\n\r\nconst Tabs = ({OnFilterTodo, OnToggleBarChart}) => {\r\n\r\n    const [{all, active, done}, setTabs] = useState({all: true, active: false, done: false});\r\n    const clazz = 'tabs-btn-active';\r\n\r\n    const OnSetAll = () => {\r\n        OnFilterTodo('all');\r\n        setTabs({all: true, active: false, done: false});\r\n    }\r\n    \r\n    const OnSetActive = () => {\r\n        OnFilterTodo('active');\r\n        setTabs({all: false, active: true, done: false});\r\n    }\r\n\r\n    const OnSetDone = () => {\r\n        OnFilterTodo('done');\r\n        OnToggleBarChart();\r\n        setTabs({all: false, active: false, done: true});\r\n    }\r\n\r\n    return (\r\n        <ul className=\"tabs\">\r\n            <li className={`tabs-btn ${all ? clazz : 'close'}`} onClick={() => OnSetAll()}>All</li>\r\n            <li className={`tabs-btn ${active ? clazz : 'close'}`} onClick={() => OnSetActive()}>Active</li>\r\n            <li className={`tabs-btn ${done ? clazz : 'close'}`} onClick={() => OnSetDone()}>Done</li>\r\n        </ul>\r\n    );\r\n}\r\n\r\nexport default Tabs;","import TodoItem from './todo-item';\r\nexport default TodoItem;","import React from 'react';\r\nimport './todo-item.css';\r\n\r\nconst TodoItem = ({todo, OnDoneTodo, OnImportantTodo, OnDeleteTodo}) => {\r\n\r\n    let done, important;  \r\n\r\n    if(todo?.done){\r\n        done = 'todos-label-done';\r\n    }\r\n\r\n    if(todo?.important){\r\n        important = 'todos-label-important';\r\n    }\r\n\r\n    return (\r\n        <li className=\"todos-item\">\r\n            <span className={`todos-label ${done} ${important}`}\r\n                  onClick={() => OnDoneTodo(todo?.id)}>\r\n                  {todo?.label}\r\n            </span>\r\n            <div className=\"todos-container\">\r\n                <i className=\"far fa-star\" onClick={() => OnImportantTodo(todo?.id)}></i>\r\n                <i className=\"far fa-trash-alt\" onClick={() => OnDeleteTodo(todo?.id)}></i>    \r\n            </div>\r\n        </li>\r\n    );\r\n}\r\n\r\nexport default TodoItem;","import TodoList from './todo-list';\r\nexport default TodoList;","import React from 'react';\r\nimport TodoItem from '../todo-item';\r\nimport './todo-list.css';\r\n\r\nconst TodoList = ({todos, OnDoneTodo, OnImportantTodo, OnDeleteTodo}) => {\r\n\r\n    const todosItemsBuild = (todos) => {\r\n        return todos.map((todo) => {\r\n            return <TodoItem todo={todo} key={todo.id} OnDoneTodo={OnDoneTodo} OnImportantTodo={OnImportantTodo} OnDeleteTodo={OnDeleteTodo} />;\r\n        });\r\n    }\r\n    \r\n    let text = \"To-do tasks\";\r\n    \r\n    if(todos.length === 0){\r\n        text = \"No to-do tasks\";\r\n    }\r\n\r\n    return (\r\n        <>\r\n            <h2 className=\"todos-header\">{text}</h2>\r\n            <ul className=\"todos\">\r\n                { todosItemsBuild(todos) }\r\n            </ul>\r\n        </>\r\n    );\r\n}\r\n\r\nexport default TodoList;","import Form from './form';\r\nexport default Form;","import React from 'react';\r\nimport './form.css';\r\n\r\nconst Form = ({OnSubmitTodo}) => {\r\n\r\n    return (\r\n        <form className=\"form\" autoComplete=\"off\" onSubmit={(e) => OnSubmitTodo(e, e.target['todo'].value)}>\r\n            <input className=\"form-input\" name=\"todo\" type=\"text\" placeholder=\"Add to-do here\"/>\r\n            <button className=\"btn form-btn\">Add</button>\r\n        </form>\r\n    );\r\n}\r\n\r\nexport default Form;","import React from 'react';\r\nimport './bar-chart.css';\r\n\r\nconst BarChart = ({todos, hideBarChart,OnToggleBarChart}) => {\r\n    \r\n    const charts = todos.map(todo => todo.completed_date);\r\n    const week = [1,2,3,4,5,6,7];\r\n    const graphs = [];\r\n    \r\n    for (let i = 0; i < week.length; i++) {\r\n        let counter = 0;\r\n\r\n        for (let j = 0; j < charts.length; j++) {\r\n            if(week[i] === charts[j]){\r\n                counter++;\r\n            }\r\n        }       \r\n        graphs.push(counter);\r\n    }\r\n    \r\n    return (\r\n        <div className={`overlay ${hideBarChart ? 'hide' : 'show'}`}>\r\n            <div className=\"bar\">\r\n                <i className=\"fal fa-times bar-btn\" \r\n                    onClick={() => OnToggleBarChart()}>\r\n                </i>\r\n                <ul className=\"bar-counter\">\r\n                    <li className=\"bar-count\">12</li>\r\n                    <li className=\"bar-count\">10</li>\r\n                    <li className=\"bar-count\">8</li>\r\n                    <li className=\"bar-count\">6</li>\r\n                    <li className=\"bar-count\">4</li>\r\n                    <li className=\"bar-count\">2</li>\r\n                    <li className=\"bar-count\">0</li>\r\n                </ul>\r\n                <ul className=\"bar-list-items\">\r\n                    <BarChartItem graphs={graphs}/>\r\n                </ul>\r\n                <ul className=\"bar-list-names\">\r\n                    <li className=\"bar-name\">Monday</li>\r\n                    <li className=\"bar-name\">Tuesday</li>\r\n                    <li className=\"bar-name\">Wednesday</li>\r\n                    <li className=\"bar-name\">Thursday</li>\r\n                    <li className=\"bar-name\">Friday</li>\r\n                    <li className=\"bar-name\">Saturday</li>\r\n                    <li className=\"bar-name\">Sundays</li>\r\n                </ul>\r\n            </div>\r\n        </div>\r\n    );\r\n}\r\n\r\nconst BarChartItem = ({graphs}) => {\r\n    return graphs.map((el, i) => {\r\n        let height = el * 27;\r\n        \r\n        if(height === 0) {\r\n            height = 5;\r\n        }\r\n        \r\n        return (\r\n            <li key={i} className=\"bar-item\" data-height={`${height}px`} style={{height: `${height}px`}}></li>\r\n        );\r\n    });\r\n}\r\n\r\nexport default BarChart;","import BarChart from './bar-chart';\r\nexport default BarChart;","const getTodo = async () => {\r\n    try{\r\n        const response = await fetch('http://localhost:8000/todos');\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    } catch(err) {\r\n        throw new Error('error getting data');\r\n    }\r\n}\r\n\r\n\r\nconst postTodo = async (newTodo) => {\r\n    try{\r\n        const response = await fetch('http://localhost:8000/todos',{\r\n            method: 'POST',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(newTodo)\r\n        });\r\n        const result = await response.json();\r\n\r\n        return result;\r\n    } catch(err) {\r\n        throw new Error('error posting data');\r\n    }\r\n}\r\n\r\nconst updateTodo = async (id, putTodo) => {\r\n    try{\r\n        await fetch(`http://localhost:8000/todos/${id}`,{\r\n            method: 'PUT',\r\n            headers: {\r\n                'Content-Type': 'application/json'\r\n            },\r\n            body: JSON.stringify(putTodo)\r\n        });\r\n      \r\n    } catch(err) {\r\n        throw new Error('error updating data');\r\n    }\r\n}\r\n\r\nconst deleteTodo = async (id) => {\r\n    try{\r\n        await fetch(`http://localhost:8000/todos/${id}`,{\r\n            method: 'DELETE',\r\n        });\r\n        \r\n    } catch(err) {\r\n        throw new Error('error deleting data');\r\n    }\r\n}\r\n\r\nexport {\r\n    getTodo,\r\n    postTodo,\r\n    updateTodo,\r\n    deleteTodo\r\n}","import App from './app';\r\nexport default App;","import React, { useEffect, useState } from 'react';\r\nimport Header from '../app-header';\r\nimport Tabs from '../tabs';\r\nimport TodoList from '../todo-list';\r\nimport Form from '../form';\r\nimport BarChart from '../bar-chart';\r\nimport { getTodo, postTodo, updateTodo, deleteTodo} from '../../service';\r\nimport './app.css';\r\n\r\nconst App = () => {\r\n    \r\n    const [todos, setTodos] = useState([]);\r\n    const [checking, setCheck] = useState('all');\r\n    const [hideBarChart, setBarChart] = useState(true);\r\n\r\n    useEffect(() => {\r\n        const fetchData = async ()=> {\r\n            const data = await getTodo();\r\n            \r\n            setTodos(data);\r\n        }\r\n\r\n        fetchData();\r\n    },[]);\r\n\r\n\r\n    const OnSubmitTodo = (e, label) => {\r\n        e.preventDefault();\r\n\r\n        if(label !== '') {\r\n            const newTodo = {\r\n                id: Date.now(),\r\n                label: label,\r\n                done: false,\r\n                important : false,\r\n                created_date: new Date().getDay(),\r\n                completed_date: null \r\n            };\r\n            \r\n            e.target.reset();\r\n            setTodos([...todos,newTodo]);\r\n            postTodo(newTodo);\r\n        }\r\n    }\r\n\r\n    const OnDeleteTodo = (id) => {\r\n        const index = todoFindIndex(id);\r\n        \r\n        setTodos([...todos.slice(0, index), ...todos.slice(index + 1, todos.length)]);\r\n        deleteTodo(id);\r\n    }\r\n\r\n    const OnDoneTodo = (id) => {\r\n        const index = todoFindIndex(id);\r\n        const withDone = {\r\n            ...todos[index],\r\n            done: !todos[index].done,\r\n            completed_date: new Date().getDay()\r\n        }\r\n\r\n        setTodos([...todos.slice(0, index), withDone, ...todos.slice(index + 1, todos.length)]);\r\n        updateTodo(id, withDone,);\r\n    }\r\n    \r\n    const OnImportantTodo = (id) => {\r\n        const index = todoFindIndex(id);\r\n        const withImportant = {\r\n            ...todos[index],\r\n            important: !todos[index].important\r\n        }\r\n\r\n        setTodos([...todos.slice(0, index), withImportant, ...todos.slice(index + 1, todos.length)]);\r\n        updateTodo(id, withImportant);\r\n    }\r\n\r\n    const OnFilterTodo = (tab) => {\r\n        setCheck(tab);\r\n    }\r\n\r\n    const todoFindIndex = (id) => {\r\n        return todos.findIndex(el => el.id === id);\r\n    }\r\n\r\n    const modifyTodo = (todos, checking) => {\r\n        switch(checking) {\r\n            case 'active':\r\n                return todos.filter(el => !el.done);\r\n            case 'done':\r\n                return todos.filter(el => el.done);\r\n            default:\r\n                return todos;\r\n        }\r\n    }\r\n\r\n    const OnToggleBarChart = () => {\r\n        setBarChart(!hideBarChart);\r\n    }\r\n\r\n    const active = todos.filter(el => !el.done).length;\r\n    const done = todos.filter(el => el.done).length;\r\n\r\n    return (\r\n        <div className=\"app\">\r\n            <div className=\"app-container\">\r\n                <Tabs OnFilterTodo={OnFilterTodo} OnToggleBarChart={OnToggleBarChart} />\r\n                <Header active={active} done={done} />\r\n                <Form OnSubmitTodo={OnSubmitTodo} />\r\n                <TodoList todos={modifyTodo(todos, checking)} OnDoneTodo={OnDoneTodo} OnImportantTodo={OnImportantTodo} OnDeleteTodo={OnDeleteTodo} />\r\n            </div>\r\n            <BarChart todos={modifyTodo(todos, 'done')} hideBarChart={hideBarChart} OnToggleBarChart={OnToggleBarChart}/> \r\n        </div>\r\n    );\r\n}\r\n\r\n\r\n\r\nexport default App;","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './components/app';\n\nReactDOM.render(\n  <App/>,document.getElementById('root')\n);\n\n\n"],"sourceRoot":""}